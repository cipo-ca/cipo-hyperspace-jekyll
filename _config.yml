title: CIPO
logo: images/CIPO_logo.png
baseurl: /
permalink: '/:title/'
collections:
  posts:
    permalink: '/posts/:title/'
palette: blue
palettes:
  blue:
    sass:
      bg: '#253149'
      accent1: '#4167a6'
      accent2: '#3f8eb3'
      accent3: '#4ca07e'
  green:
    sass:
      bg: '#20313d'
      accent1: '#2e9692'
      accent2: '#3aa4ca'
      accent3: '#b84d50'
  purple:
    sass:
      bg: '#312450'
      accent1: '#5e42a6'
      accent2: '#5052b5'
      accent3: '#b74e91'
sass:
  indentWidth: 4
  style: nested
  precision: 10
plugins:
  - jekyll-menus
  - jekyll-strapi
exclude:
  - Gemfile
  - Gemfile.lock
  - node_modules
  - vendor/bundle/
  - vendor/cache/
  - vendor/gems/
  - vendor/ruby/
  - ssg-build.sh
  - LICENSE.md
  - README.md
  - netlify.toml
  - cipo-build.sh
  - stackbit-pull.js

strapi:
  # Your API endpoint (optional, default to http://localhost:1337)
  # endpoint: http://localhost:1337
  endpoint: http://cms.cipo.ca:1337
  # Collections, key is used to access in the strapi.collections
  # template variable
  collections:
    # Example for a "posts" collection
    articles:
      # Collection name (optional). Used to construct the url requested. Example: type `foo` would generate the following url `http://localhost:1337/foo`.
      type: articles
      # Permalink used to generate the output files (eg. /posts/:id).
      permalink: /articles/:slug/
      layout: article.html
      # Generate output files or not (default: false)
      output: true
    videos:
      # Collection name (optional). Used to construct the url requested. Example: type `foo` would generate the following url `http://localhost:1337/foo`.
      type: videos
      # Permalink used to generate the output files (eg. /posts/:id).
      permalink: /videos/:id/
      layout: video.html
      # Generate output files or not (default: false)
      output: true
